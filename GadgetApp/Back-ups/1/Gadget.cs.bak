using System.Collections.Generic;
using System.Linq;

namespace GadgetApp.Models
{
    public class Gadget
    {
        // Властивості класу
        public string Name { get; set; }
        public string Manufacturer { get; set; }
        public decimal Price { get; set; }
        public GadgetType Type { get; set; }
        public string ScreenSize { get; set; }
        public List<GadgetFeature> Features { get; set; }

        // Допоміжна властивість для зручного відображення функцій у таблиці
        public string FeaturesString => Features != null ? string.Join(", ", Features) : string.Empty;

        // --- КРОК 1.1: РЕАЛІЗАЦІЯ КОНСТРУКТОРІВ ---

        /// <summary>
        /// 1. Конструктор за замовчуванням.
        /// Створює порожній об'єкт з ініціалізованими значеннями,
        /// щоб уникнути помилок NullReferenceException.
        /// </summary>
        public Gadget()
        {
            Name = string.Empty;
            Manufacturer = string.Empty;
            Price = 0;
            Type = GadgetType.Smartphone; // Значення за замовчуванням
            ScreenSize = "0x0";
            Features = new List<GadgetFeature>(); // Важливо ініціалізувати список!
        }

        /// <summary>
        /// 2. Конструктор з параметрами.
        /// Створює об'єкт і одразу заповнює його властивості переданими значеннями.
        /// </summary>
        /// <param name="name">Назва гаджета</param>
        /// <param name="manufacturer">Виробник</param>
        /// <param name="price">Ціна</param>
        /// <param name="type">Тип гаджета</param>
        /// <param name="screenSize">Розмір екрану</param>
        /// <param name="features">Список додаткових функцій</param>
        public Gadget(string name, string manufacturer, decimal price, GadgetType type, string screenSize, List<GadgetFeature> features)
        {
            Name = name;
            Manufacturer = manufacturer;
            Price = price;
            Type = type;
            ScreenSize = screenSize;
            Features = features ?? new List<GadgetFeature>(); // Перевірка на null
        }

        /// <summary>
        /// 3. Конструктор копіювання.
        /// Створює новий, незалежний об'єкт, який є точною копією існуючого.
        /// </summary>
        /// <param name="other">Інший об'єкт Gadget для копіювання</param>
        public Gadget(Gadget other)
        {
            Name = other.Name;
            Manufacturer = other.Manufacturer;
            Price = other.Price;
            Type = other.Type;
            ScreenSize = other.ScreenSize;
            // Створюємо НОВИЙ список і копіюємо в нього елементи зі старого.
            // Це створює "глибоку" копію, і зміни в списку одного об'єкта
            // не вплинуть на інший.
            Features = new List<GadgetFeature>(other.Features);
        }
        
        // --- Кінець реалізації конструкторів ---
        
        // Метод для отримання тестових даних (залишаємо для зручності)
        public static List<Gadget> GetSampleGadgets()
        {
            return new List<Gadget>
            {
                new Gadget("iPhone 15 Pro", "Apple", 999.99m, GadgetType.Smartphone, "6.1\"", new List<GadgetFeature> { GadgetFeature.Camera, GadgetFeature.GPS }),
                new Gadget("Galaxy S24 Ultra", "Samsung", 1199.00m, GadgetType.Smartphone, "6.8\"", new List<GadgetFeature> { GadgetFeature.Camera, GadgetFeature.GPS, GadgetFeature.PulseMeter }),
                new Gadget("iPad Air", "Apple", 599.50m, GadgetType.Tablet, "10.9\"", new List<GadgetFeature> { GadgetFeature.Camera, GadgetFeature.GPS }),
                new Gadget("Galaxy Watch 6", "Samsung", 349.00m, GadgetType.Watch, "480x480", new List<GadgetFeature> { GadgetFeature.GPS, GadgetFeature.PulseMeter }),
                new Gadget("Pixel 8", "Google", 699.00m, GadgetType.Smartphone, "6.2\"", new List<GadgetFeature> { GadgetFeature.Camera, GadgetFeature.GPS })
            };
        }
    }
}

